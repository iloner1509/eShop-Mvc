/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/jquery-sparkline@2.4.0/src/chart-box.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
$.fn.sparkline.box=box=createClass($.fn.sparkline._base,{type:"box",init:function(t,e,r,i,a){box._super.init.call(this,t,e,r,i,a),this.values=$.map(e,Number),this.width="auto"===r.get("width")?"4.0em":i,this.initTarget(),this.values.length||(this.disabled=1)},getRegion:function(){return 1},getCurrentRegionFields:function(){var t=[{field:"lq",value:this.quartiles[0]},{field:"med",value:this.quartiles[1]},{field:"uq",value:this.quartiles[2]}];return void 0!==this.loutlier&&t.push({field:"lo",value:this.loutlier}),void 0!==this.routlier&&t.push({field:"ro",value:this.routlier}),void 0!==this.lwhisker&&t.push({field:"lw",value:this.lwhisker}),void 0!==this.rwhisker&&t.push({field:"rw",value:this.rwhisker}),t},render:function(){var t,e,r,i,a,o,n,h,l,u,d,s=this.target,g=this.values,M=g.length,p=this.options,w=this.canvasWidth,v=this.canvasHeight,c=void 0===p.get("chartRangeMin")?Math.min.apply(Math,g):p.get("chartRangeMin"),f=void 0===p.get("chartRangeMax")?Math.max.apply(Math,g):p.get("chartRangeMax"),C=0;if(box._super.render.call(this)){if(p.get("raw"))p.get("showOutliers")&&g.length>5?(e=g[0],t=g[1],i=g[2],a=g[3],o=g[4],n=g[5],h=g[6]):(t=g[0],i=g[1],a=g[2],o=g[3],n=g[4]);else if(g.sort(function(t,e){return t-e}),i=quartile(g,1),a=quartile(g,2),r=(o=quartile(g,3))-i,p.get("showOutliers")){for(t=n=void 0,l=0;l<M;l++)void 0===t&&g[l]>i-r*p.get("outlierIQR")&&(t=g[l]),g[l]<o+r*p.get("outlierIQR")&&(n=g[l]);e=g[0],h=g[M-1]}else t=g[0],n=g[M-1];this.quartiles=[i,a,o],this.lwhisker=t,this.rwhisker=n,this.loutlier=e,this.routlier=h,d=w/(f-c+1),p.get("showOutliers")&&(C=Math.ceil(p.get("spotRadius")),d=(w-=2*Math.ceil(p.get("spotRadius")))/(f-c+1),e<t&&s.drawCircle((e-c)*d+C,v/2,p.get("spotRadius"),p.get("outlierLineColor"),p.get("outlierFillColor")).append(),h>n&&s.drawCircle((h-c)*d+C,v/2,p.get("spotRadius"),p.get("outlierLineColor"),p.get("outlierFillColor")).append()),s.drawRect(Math.round((i-c)*d+C),Math.round(.1*v),Math.round((o-i)*d),Math.round(.8*v),p.get("boxLineColor"),p.get("boxFillColor")).append(),s.drawLine(Math.round((t-c)*d+C),Math.round(v/2),Math.round((i-c)*d+C),Math.round(v/2),p.get("lineColor")).append(),s.drawLine(Math.round((t-c)*d+C),Math.round(v/4),Math.round((t-c)*d+C),Math.round(v-v/4),p.get("whiskerColor")).append(),s.drawLine(Math.round((n-c)*d+C),Math.round(v/2),Math.round((o-c)*d+C),Math.round(v/2),p.get("lineColor")).append(),s.drawLine(Math.round((n-c)*d+C),Math.round(v/4),Math.round((n-c)*d+C),Math.round(v-v/4),p.get("whiskerColor")).append(),s.drawLine(Math.round((a-c)*d+C),Math.round(.1*v),Math.round((a-c)*d+C),Math.round(.9*v),p.get("medianColor")).append(),p.get("target")&&(u=Math.ceil(p.get("spotRadius")),s.drawLine(Math.round((p.get("target")-c)*d+C),Math.round(v/2-u),Math.round((p.get("target")-c)*d+C),Math.round(v/2+u),p.get("targetColor")).append(),s.drawLine(Math.round((p.get("target")-c)*d+C-u),Math.round(v/2),Math.round((p.get("target")-c)*d+C+u),Math.round(v/2),p.get("targetColor")).append()),s.render()}}});
//# sourceMappingURL=/sm/513e66d7a9381524fa6a123f2dd789d7d50e8b1207ce1f0bee90fa130a59b27a.map